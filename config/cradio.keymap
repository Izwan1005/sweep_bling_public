// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>

/ {
    macros {
        norsk_AO: norsk_AO {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_9>,
                <&macro_release>;

            label = "NORSK_AO";
        };
        norsk_AO_cap: norsk_AO_cap {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_9 &kp KP_NUMBER_7>,
                <&macro_release>;

            label = "NORSK_AO_CAP";
        };
        delete_line: delete_line {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp END &kp LS(HOME) &kp BACKSPACE>;
            label = "DELETE_LINE";
        };
        norsk_AE: norsk_AE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_3 &kp KP_NUMBER_0>,
                <&macro_release>;

            label = "NORSK_AE";
        };
        norsk_AE_CAP: norsk_AE_CAP {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_9 &kp KP_NUMBER_8>,
                <&macro_release>;

            label = "NORSK_AE_CAP";
        };
        norsk_OE: norsk_OE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_4 &kp KP_NUMBER_8>,
                <&macro_release>;

            label = "NORSK_OE";
        };
        norsk_OE_CAP: norsk_OE_CAP {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT &kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_1 &kp KP_NUMBER_6>,
                <&macro_release>;

            label = "NORSK_OE_CAP";
        };
    };

    behaviors {
        caps_esc: caps_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_ESC";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE>, <&kp TAB>;

            tapping-term-ms = <300>;
        };
        Layer_hold: Layer_hold {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_HOLD";
            bindings = <&lt>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <100>;
            flavor = "balanced";
            hold-trigger-key-positions = <31>;
        };
        AO: AO {
            compatible = "zmk,behavior-tap-dance";
            label = "AO";
            #binding-cells = <0>;
            bindings = <&norsk_AO>, <&norsk_AO_cap>;

            tapping-term-ms = <300>;
        };
        QUOT_DQUO: QUOT_DQUO {
            compatible = "zmk,behavior-tap-dance";
            label = "QUOT_DQUO";
            #binding-cells = <0>;
            bindings = <&kp SINGLE_QUOTE>, <&kp DOUBLE_QUOTES>;

            tapping-term-ms = <300>;
        };
        AE: AE {
            compatible = "zmk,behavior-tap-dance";
            label = "AE";
            #binding-cells = <0>;
            bindings = <&norsk_AE>, <&norsk_AE_CAP>;

            tapping-term-ms = <300>;
        };
        OE: OE {
            compatible = "zmk,behavior-tap-dance";
            label = "OE";
            #binding-cells = <0>;
            bindings = <&norsk_OE>, <&norsk_OE_CAP>;

            tapping-term-ms = <300>;
        };
    };

    combos {
        compatible = "zmk,combos";

        NPP_comment {
            bindings = <&kp LC(Q)>;
            key-positions = <0 1>;
            layers = <0>;
        };

        RIGHT_ENT {
            bindings = <&kp ENTER>;
            key-positions = <27 28>;
            layers = <0>;
        };

        Arrow_up {
            bindings = <&kp UP_ARROW>;
            key-positions = <6 7>;
            layers = <0>;
        };

        delete_line_combo {
            bindings = <&delete_line>;
            key-positions = <30 31>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        layer_0 {
            bindings = <
&kp Q  &kp W            &kp F            &kp P            &kp G                      &kp J                 &kp L              &kp U      &kp Y    &kp SEMI
&kp A  &Layer_hold 4 R  &Layer_hold 5 S  &Layer_hold 2 T  &mt D LEFT_GUI             &kp H                 &kp N              &kp E      &kp I    &kp O
&kp Z  &mt LEFT_ALT X   &kp C            &kp V            &kp B                      &kp K                 &kp M              &kp COMMA  &kp DOT  &kp FSLH
                                         &mt LCTRL ENTER  &Layer_hold 1 BACKSPACE    &mt LEFT_SHIFT SPACE  &Layer_hold 3 TAB
            >;
        };

        layer_1 {
            bindings = <
&caps_esc   &kp F9      &AE        &trans      &QUOT_DQUO    &trans             &kp UP             &trans       &OE            &kp LS(CARET)
&AO         &kp LSHIFT  &kp LCTRL  &trans      &trans        &kp LEFT           &kp DOWN           &kp RIGHT    &kp LS(DLLR)   &kp LS(POUND)
&kp LS(F3)  &trans      &trans     &trans      &trans        &trans             &kp LS(LEFT)       &kp LA(END)  &kp LS(PRCNT)  &kp BSLH
                                   &kp LS(AT)  &trans        &kp LS(LC(SPACE))  &kp LS(LC(SPACE))
            >;
        };

        layer_2 {
            bindings = <
&trans    &trans     &kp F2     &trans   &trans          &kp PLUS   &kp N1   &kp N2  &kp N3  &kp STAR
&kp LALT  &kp LSHFT  &kp LCTRL  &trans   &trans          &kp MINUS  &kp N4   &kp N5  &kp N6  &kp FSLH
&trans    &trans     &trans     &trans   &trans          &kp DOT    &kp N7   &kp N8  &kp N9  &kp EQUAL
                                &kp RET  &kp LC(BSPC)    &kp N0     &kp TAB
            >;
        };

        layer_3 {
            bindings = <
&kp LALT   &kp F1  &kp F2  &kp F3  &kp F10         &trans         &kp PG_UP  &trans   &trans  &trans
&kp LCTRL  &kp F4  &kp F5  &kp F6  &kp F11         &kp HOME       &kp PG_DN  &kp END  &trans  &trans
&kp LSHFT  &kp F7  &kp F8  &kp F9  &kp F12         &kp LC(LA(I))  &trans     &trans   &trans  &trans
                           &trans  &kp LC(BSPC)    &kp BSPC       &trans
            >;
        };

        layer_4 {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        layer_5 {
            bindings = <
&trans  &trans         &trans  &trans       &trans       &trans  &trans        &trans        &trans  &trans
&trans  &kp LS(LG(S))  &trans  &trans       &trans       &trans  &kp LS(LPAR)  &kp LS(RPAR)  &trans  &trans
&trans  &trans         &trans  &trans       &trans       &trans  &trans        &trans        &trans  &trans
                               &kp LS(RET)  &kp SPACE    &trans  &trans
            >;
        };
    };
};
