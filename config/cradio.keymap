// Copyright (c) 2022 The ZMK Contributors
// SPDX-License-Identifier: MIT

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>

&lt { tapping-term-ms = <170>; };

/ {
    macros {
        norsk_AO: norsk_AO {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_2 &kp KP_NUMBER_9>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "NORSK_AO";
        };

        norsk_AO_cap: norsk_AO_cap {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_9 &kp KP_NUMBER_7>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "NORSK_AO_CAP";
        };

        norsk_AE: norsk_AE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_3 &kp KP_NUMBER_0>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "NORSK_AE";
        };

        norsk_AE_CAP: norsk_AE_CAP {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_1 &kp KP_NUMBER_9 &kp KP_NUMBER_8>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "NORSK_AE_CAP";
        };

        norsk_OE: norsk_OE {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_4 &kp KP_NUMBER_8>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "NORSK_OE";
        };

        norsk_OE_CAP: norsk_OE_CAP {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings =
                <&macro_press>,
                <&kp LEFT_ALT>,
                <&macro_tap>,
                <&kp KP_NUMBER_0 &kp KP_NUMBER_2 &kp KP_NUMBER_1 &kp KP_NUMBER_6>,
                <&macro_release>,
                <&kp LEFT_ALT>;

            label = "NORSK_OE_CAP";
        };
    };

    behaviors {
        caps_esc: caps_esc {
            compatible = "zmk,behavior-tap-dance";
            label = "CAPS_ESC";
            #binding-cells = <0>;
            bindings = <&kp ESCAPE>, <&kp CAPS>;

            tapping-term-ms = <300>;
        };

        AO: AO {
            compatible = "zmk,behavior-tap-dance";
            label = "AO";
            #binding-cells = <0>;
            bindings = <&norsk_AO>, <&norsk_AO_cap>;

            tapping-term-ms = <300>;
        };

        AE: AE {
            compatible = "zmk,behavior-tap-dance";
            label = "AE";
            #binding-cells = <0>;
            bindings = <&norsk_AE>, <&norsk_AE_CAP>;

            tapping-term-ms = <300>;
        };

        OE: OE {
            compatible = "zmk,behavior-tap-dance";
            label = "OE";
            #binding-cells = <0>;
            bindings = <&norsk_OE>, <&norsk_OE_CAP>;

            tapping-term-ms = <300>;
        };
    };

    combos {
        compatible = "zmk,combos";

        bootloader_left {
            bindings = <&bootloader>;
            key-positions = <4 14 24>;
            layers = <0>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            bindings = <
&kp Q    &kp W    &kp F    &kp P      &kp G       &kp J      &kp L          &kp U            &kp Y              &lt 6 SEMICOLON
&lt 2 A  &lt 3 R  &lt 4 S  &lt 5 T    &kp D       &kp H      &kp N          &kp E            &kp I              &kp O
&kp Z    &kp X    &kp C    &kp V      &kp B       &kp K      &kp M          &mt RCTRL COMMA  &mt RIGHT_ALT DOT  &mt LC(LEFT_SHIFT) SLASH
                           &kp ENTER  &kp BSPC    &kp SPACE  &lt 7 LA(TAB)
            >;
        };

        Macros {
            bindings = <
&caps_esc  &kp F9  &none  &none  &none     &none  &none  &none  &none             &none
&AO        &none   &none  &none  &none     &none  &none  &AE    &none             &OE
&none      &none   &none  &none  &none     &none  &none  &none  &kp LC(LG(LEFT))  &kp LC(LG(RIGHT))
                          &none  &trans    &none  &none
            >;
        };

        Numbers {
            bindings = <
&kp LS(LEFT_ALT)  &kp HOME        &kp UP_ARROW      &kp END     &kp TAB              &kp KP_PLUS      &kp KP_NUMBER_1  &kp KP_NUMBER_2        &kp KP_NUMBER_3              &kp KP_MULTIPLY
&trans            &kp LEFT_ARROW  &kp DOWN          &kp RIGHT   &kp C_VOLUME_UP      &kp KP_SUBTRACT  &kp KP_N4        &mt RCTRL KP_NUMBER_5  &mt RIGHT_SHIFT KP_NUMBER_6  &kp KP_DIVIDE
&kp KP_NUMLOCK    &none           &kp C_PLAY_PAUSE  &kp C_NEXT  &kp C_VOLUME_DOWN    &none            &kp KP_N7        &kp KP_N8              &kp KP_N9                    &kp EQUAL
                                                    &none       &none                &kp KP_NUMBER_0  &kp TAB
            >;
        };

        additional {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&none   &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
                        &trans  &trans    &trans  &trans
            >;
        };

        Symbol {
            bindings = <
&none  &none  &none   &kp HASH           &kp MINUS         &trans                   &kp LEFT_BRACKET      &kp RIGHT_BRACKET      &kp AMPERSAND  &kp CARET
&none  &none  &trans  &kp SINGLE_QUOTE   &kp UNDERSCORE    &trans                   &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp DOLLAR     &trans
&none  &none  &none   &kp DOUBLE_QUOTES  &kp TILDE         &kp EQUAL                &kp LEFT_BRACE        &kp RIGHT_BRACE        &kp PERCENT    &kp BACKSLASH
                      &mt LCTRL AT       &kp SPACE         &mt LEFT_SHIFT KP_EQUAL  &none
            >;
        };

        Functions {
            bindings = <
&trans  &none   &trans  &trans  &trans          &trans     &kp F1  &kp F2  &kp F3  &kp F10
&trans  &trans  &trans  &trans  &trans          &trans     &kp F4  &kp F5  &kp F6  &kp F11
&trans  &trans  &trans  &trans  &trans          &trans     &kp F7  &kp F8  &kp F9  &kp F12
                        &none   &kp LC(BSPC)    &kp LSHFT  &trans
            >;
        };

        Bluetooth {
            bindings = <
&bt BT_CLR    &trans  &trans  &soft_off  &trans    &none         &trans        &trans        &bt BT_NXT    &none
&out OUT_BLE  &none   &trans  &trans     &trans    &bt BT_SEL 0  &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_SEL 1  &bt BT_SEL 2
&out OUT_USB  &none   &trans  &trans     &trans    &none         &none         &none         &none         &none
                              &trans     &trans    &trans        &none
            >;
        };

        Arrow {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans    &trans    &kp UP_ARROW    &trans     &trans
&trans  &trans  &trans  &trans  &trans    &trans    &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &trans
&trans  &trans  &trans  &trans  &trans    &kp RGUI  &trans    &trans          &trans     &trans
                        &trans  &trans    &trans    &trans
            >;
        };
    };

    conditional_layers { compatible = "zmk,conditional-layers"; };
};
